- documentable ||= nil
- unless documentable
  - if params[:documentable_id] && params[:documentable_type]
    - documentable = BlobStruct.new :id => params[:documentable_id], :class => Kernel.const_get(params[:documentable_type])


%table.tabular{:cellspacing => 0}
  - if documentable
    %thead
      %tr
        %th
          %span= "#{documentable.class.respond_to?(:document_title_name) ? documentable.class.document_title_name : documentable.class.name.humanize} Documents"
          .actions= link_to image_tag('/images/fluxx_engine/theme/default/icons/add.png', :class=> 'add-button'), model_documents_path(:model_document => {:documentable_id => documentable.id, :documentable_type => documentable.class.name}), :class => 'to-upload', 'data-is-success' => '.show', 'data-on-success' => 'refreshCaller,close', 'data-extensions'.to_sym=>"txt,zip,gz,pdf,png,jpg,gif", :title => "Add Document", 'data-document-type-url' => model_document_types_path(:model_type => documentable.class.name, :name => 'associated_request_documents', :format => :json), 'data-document-type-param' => 'model_document[model_document_type_id]'
  %tbody
    - if !models || models.empty?
      %tr
        %td No Documents
    - else
      - models.sort_by{|model| [(model.model_document_type ? (model.model_document_type.name || '') : ''), (model.created_at ? (-1 * model.created_at.to_i) : nil)]}.each do |model|
        %tr
          %td
            = link_to(truncate(model.document_file_name, :length => 25), model.document.url, :target => '_blank', :class => 'air-download')
            %span
              - if model.model_document_type
                = link_to model.model_document_type.name, edit_model_document_path(model), :class => 'to-modal', 'data-is-success' => '.show', 'data-on-success' => 'refreshCaller,close'
              - else
                = link_to 'No File Type', edit_model_document_path(model), :class => 'to-modal', 'data-is-success' => '.show', 'data-on-success' => 'refreshCaller,close'
              - if model.created_by
                By
                = model.created_by.full_name 
              - if model.created_at
                Added at
                = model.created_at.ampm_time
                on
                = model.created_at.full
              - else
                no timestamp
            - if current_user.has_delete_for_model? model
              %span.delete-button= link_to image_tag("/images/fluxx_engine/theme/default/icons/delete.png"), model_document_path(model), :class => 'as-delete', 'data-on-success' => 'refreshCaller'
        




