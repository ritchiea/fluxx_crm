- doc_label ||= nil
- doc_label = params[:doc_label] unless doc_label
- models ||= []
- documentable ||= nil
- unless documentable
  - if params[:documentable_id] && params[:documentable_type]
    - documentable = BlobStruct.new :id => params[:documentable_id], :class => Kernel.const_get(params[:documentable_type])
- required_doc_ids ||= []
- if params[:required_doc_ids]
  - required_doc_ids = params[:required_doc_ids].collect {|id| id.to_i} # params are strings, so convert to integers


-models = models.select{|model| current_user.has_view_for_model?(model) }

- unless required_doc_ids.empty?
  - missing_doc_ids = required_doc_ids - models.map(&:model_document_type_id)
  - missing_docs = ModelDocumentType.find_all_by_id(missing_doc_ids)

%table.tabular{:cellspacing => 0}
  - if documentable
    %thead
      %tr
        %th
          - if doc_label && doc_label != 'default'
            = "#{doc_label} Documents"
          - else
            = "#{documentable.class.respond_to?(:document_title_name) ? documentable.class.document_title_name : documentable.class.name.humanize} Documents"
          %span.actions
            - unless ModelDocumentTemplate.adhoc_for_type_and_category(documentable.class.name).empty?
              -unless current_user.respond_to?(:is_portal_user?) && current_user.is_portal_user?
                = link_to image_tag('/images/fluxx_engine/theme/default/icons/page_add.png', :class=> 'add-button'), new_model_document_path(:as_modal => 1, :model_document => {:documentable_id => documentable.id, :documentable_type => documentable.class.name, :doc_label => doc_label}), :class => 'to-modal', :link_class => 'btn', 'data-on-success' => 'refreshCaller,close'
            - if current_user.has_create_for_model?(ModelDocument)
              = link_to image_tag('/images/fluxx_engine/theme/default/icons/add.png', :class=> 'add-button'), model_documents_path(:model_document => {:documentable_id => documentable.id, :documentable_type => documentable.class.name, :doc_label => doc_label}), :class => 'to-upload', 'data-on-success' => 'refreshCaller,close', 'data-extensions'.to_sym => ModelDocument.common_filetypes, :title => "Add Document", 'data-document-type-url' => model_document_types_path(:model_type => documentable.class.name, :format => :json, :doc_label => doc_label), 'data-document-type-param' => 'model_document[model_document_type_id]'
  %tbody
    - unless required_doc_ids.empty?
      - missing_docs.each do |missing|
        %tr
          %td
            = "Missing document:  #{missing.name}"
    - if !models || models.empty?
      %tr
        %td
          %p.caption=  "Click the green '+' sign in order to upload all relevant request and organization documents."
    - else
      - # Show the documents with types first in order
      - models.sort_by{|model| [(model.model_document_type ? (model.model_document_type.name || '||') : '||'), (model.created_at ? (-1 * model.created_at.to_i) : 0)]}.each do |model|
        %tr
          %td
            %span.actions
              - if current_user.has_delete_for_model? model
                %span.delete-button= link_to image_tag("/images/fluxx_engine/theme/default/icons/delete.png"), model_document_path(model), :class => 'as-delete', 'data-on-success' => 'refreshCaller'
              - if current_user.has_update_for_model? model
                %span.edit_link= link_to image_tag("/images/fluxx_engine/theme/default/icons/page_edit.png"), edit_model_document_path(model), :class => 'to-modal', :title => "Edit Document", 'data-on-success' => 'refreshCaller,close'
            - if model.is_file? && model.document
              = link_to(truncate(model.document_file_name, :length => 25), model.document.url, :target => '_blank', :class => "air-download #{mime_type_to_class(model.document_content_type)}")
            - elsif model.is_text?
              - if model.document_content_type.blank?
                = link_to truncate(model.document_file_name, :length => 25), model_document_path(model), :class => 'new-detail', 'data-insert' => 'after', :title => "view/edit doc"
              - else
                = link_to truncate(model.document_file_name, :length => 25), model_document_path(model), :target => '_blank', :class => "air-download #{mime_type_to_class(model.document_content_type)}"
            <br/>
            %span
              - if model.model_document_type
                %strong= model.model_document_type.name
              - if model.created_by
                By
                = model.created_by.full_name
              - if model.created_at
                Added at
                = model.created_at.ampm_time
                on
                = model.created_at.full
              - else
                no timestamp
    %tr
      %td
        



