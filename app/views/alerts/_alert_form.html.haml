- model_klass = @model.controller_klass.class_index_object.model_class
- if defined? FormElement
  = render :partial => "form_elements/liquid_field_selector", :locals=> { :model_class => model_klass, :var_name => "model" }
%fieldset.inputs
  %ol
    = semantic_form_for @model, :as => :alert, :url => new_alert_path do |form|
      = form.semantic_errors
      = form.inputs do
        = form.input :alert_enabled, :label => "Alert Enabled?"
        = form.input :filter, :as => :hidden, :input_html => {:class => "filter"}
        = form.input :model_controller_type, :as => :hidden
        = form.input :name
        = form.input :subject
        = form.input :body, :input_html => {:class => 'wysiwyg', 'data-wysiwyg-buttons' => 'bold,italic,underline,strikethrough,unorderedlist,link,image,disable'}
        = form.input :cc_emails, :label => 'CC Email Addresses', :input_html => { :rows => 5 }
        = form.input :bcc_emails, :label => 'BCC Email Addresses', :input_html => { :rows => 5 }
        = form.input :recipients, :as => :select, :collection => Alert.board_or_employee_recipients

        - if model_klass.respond_to?(:all_states) && defined?(MachineState)
          = form.input :state_driven
          = form.input :machine_states, :label => 'Transition States:', :required => false, :as => :select, :collection => ((model_klass.all_states).map{|state|machine_state = MachineState.find_cached_state_for_class_and_name(model_klass, state); [model_klass.state_to_english_translation(state), machine_state.id] if machine_state}.compact)
        - @model.class.recipient_roles.keys.map(&:to_s).sort.each do |role_name|
          = form.input role_name, :as => :boolean, :label => @model.class.recipient_roles[role_name.to_sym][:friendly_name]
      = form.buttons :commit
    #filter{"data-serialize-to-field" => '.filter'}
      = semantic_form_for ModelStub.generate_class_instance(model_klass), :url => current_index_path do |form|
        = render :partial => @model.controller_klass.class_index_object.filter_template, :locals => { :form => form }
