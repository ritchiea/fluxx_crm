- taskable ||= nil
- unless taskable
  - if grab_param(:work_task, :taskable_id) && grab_param(:work_task, :taskable_type)
    - taskable = BlobStruct.new :id => grab_param(:work_task, :taskable_id), :class => Kernel.const_get(grab_param(:work_task, :taskable_type))
- if taskable
  %h3 
    Tasks
    %span.actions= link_to image_tag('/images/fluxx_engine/theme/default/icons/add.png', :class=> 'add-button'), new_work_task_path(:work_task => {:taskable_type => taskable.class.name, :taskable_id => taskable.id}), :class => 'to-modal', 'data-on-success' => 'refreshNamed,close', 'target' => '.work-task-partial-span', :title => "add a task"
  - if !models || models.empty?
    There are no tasks.
  - else
    %ul.todo
      - models.sort_by{|task| task.created_at ? (-1 * task.created_at.to_i) : Time.at(0).to_i }.each do |model|
        %li.action-item
          %input{:type=>"checkbox", :class => 'as-put', 'data-on-success' => 'refreshCaller', :href => work_task_path(:id => model.id, :work_task => {:task_completed => !model.task_completed}), :checked => model.task_completed}
          = model.task_text
          %p.desc= "Due #{model.due_at ? model.due_at.mdy : ''}#{model.assigned_user ? ", Assigned to #{model.assigned_user.full_name}" : ''}"
          %span.actions
            = link_to image_tag("/images/fluxx_engine/theme/default/icons/delete.png"), work_task_path(model), {:class => 'as-delete', 'data-on-success' => 'refreshCaller'}
- else
  %h2= model.task_text
  %h4= "Assigned to: #{model.assigned_user.full_name}" if model.assigned_user
  - if model.task_completed
    %h4= "Task Completed #{model.completed_at.mdy if model.completed_at}" 
  - else
    %h4= "Due at #{model.due_at.mdy}" if model.due_at
  