- groupable = nil unless defined?(:groupable)
- unless groupable
  - if params[:groupable_id] && params[:groupable_type]
    - groupable = BlobStruct.new :id => params[:groupable_id], :class => Kernel.const_get(params[:groupable_type])
%table.tabular{:cellspacing => 0}
  - if groupable
    %thead
      %tr
        %th
          %span Groups
          .actions= link_to image_tag('/fluxx_engine/theme/default/images/icons/add.png', :class=> 'add-button'), new_group_member_path(:group_member => {:groupable_id => groupable.id, :groupable_type => groupable.class.name}), :class => 'to-modal', 'data-is-success' => '.show', 'data-on-success' => 'refreshCaller,close', :title => "Add Group"
  %tbody
    - if !models || models.empty?
      %tr
        %td= "No Groups"
    - else
      - models.sort_by{|group_member| group_member.group.name if group_member.group}.each do |model|
        %tr
          %td
            = truncate(model.group.name, :length => 25) if model.group
            %span
              - if model.created_by
                By
                = model.created_by.full_name 
              - if model.created_at
                Added at
                = model.created_at.ampm_time
                on
                = model.created_at.full
              - else
                no timestamp
            - if can_current_user_edit_create_users?
              %span.delete-button= link_to image_tag("/fluxx_engine/theme/default/images/icons/delete.png"), group_member_path(model), {:class => 'as-delete'}